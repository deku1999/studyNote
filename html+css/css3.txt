写在前面，css3作为比较新的版本很多属性可能浏览器的支持方面有点问题，建议在属性前面加上兼容代码，例如-webkit-(兼容google，safari),-moz-（兼容firefox），-ms-（兼容ie），-o-（兼容opera）

1.属性选择器
主要介绍下css3新增的三个属性选择器。
E[attr^="lvye"]：选取了元素E，其中E元素定义了属性attr，attr属性值是以lvye开头的任何字符串。
E[attr$="lvye"]：选取了元素E，其中E元素定义了属性attr，attr属性值是以lvye结尾的任何字符串。
E[attr*="lvye"]：选取了元素E，其中E元素定义了属性attr，attr属性值任意位置是包含了lvye的任何字符串。

2.结构伪类选择器
类型一：
E:first-child：搜寻e元素找到其父级的第一个子元素，如果是e就渲染
E:last-child：跟上述同理，只不过是父级的最后一个子元素
E:nth-child(n)，n可以为数字|odd|even，odd代表偶数，even代表奇数：同理只不过是替换为第n个子元素
E:only-child：有限制条件，e元素的父级下必须只有e元素一个子元素才会被渲染
类型二：
E:first-of-type:先找到e元素，再找到其父级下的第一个类型是e元素的元素进行渲染，注意跟类型一的区别是一个是第一个类型是e，一个是第一个子元素是e
E:last-of-type:同上述，不过是最后一个类型，在只存在一个该种类型元素时，first-of-type和last-of-type选中的其实是同一个。
E:nth-of-type（n）,n可以为数字|odd|even，odd代表偶数，even代表奇数:	同上述，只不过选中的是该种元素类型的第n个
E:only-of-type:e元素的父级下e元素这种类型只有一个会将其选中并进行渲染，父元素可以有多个类型的子元素
类型三：
:root：选择文档的根元素。在HTML中，根元素永远是HTML
:not()：选择某个元素之外的所有元素，比较常用例如 ul li:not(.a)选中ul下的li除了class为a的那个li
:empty：用域选择一个不包含任何子元素或内容的元素，也就是选择一个内容为空白的元素。例如td:empty选中为空的那个表格td
:target：用于选取页面中的某个target元素，target元素就是该元素的id被当作页面的超链接来用。例如<a href="#d">xx</a> <div id="a"></div>这时:target就会选中该div

3.UI元素状态伪类选择器
该选择器一般都是配合表单元素使用，其中::before,::after伪元素选择器要配合content来使用，默认的display为inline
E:focus：指定元素获得光标焦点时使用的样式
E:checked：选择E元素中所有被选中的元素
E::selection：改变E元素中被选择的网页文本的显示效果
E:enabled	：选择E元素中所有“可用”元素
E:disabled	：选择E元素中所有“不可用”元素
E:read-write：选择E元素中所有“可读写”元素
E:read-only：选择E元素中所有“只读”元素
E::before：在E元素之前插入内容
E::after：在E元素之后插入内容

4.文字
（1）text-shadow，文字阴影：
text-shadow:x-offset  y-offset  blur  color；x-offset：（水平阴影）表示阴影的水平偏移距离，单位可以是px、em或者百分比等。如果值为正，则阴影向右偏移；如果值为负，则阴影向左偏移；y-offset：（垂直阴影）表示阴影的垂直偏移距离，单位可以是px、em或者百分比等。如果值为正，则阴影向下偏移；如果值为负，则阴影向上偏移；blur：（模糊距离）表示阴影的模糊程度，单位可以是px、em或者百分比等。blur值不能为负。如果值越大，则阴影越模糊；如果值越小，则阴影越清晰。当然，如果不需要阴影模糊效果，可以吧blur值设置为0；color：（阴影的颜色）表示阴影的颜色，可以使用绿叶学习网的“在线调色板”获取。也可以用连续设置好几个text-shadow值并用逗号隔开，各个效果之间会进行叠加，例如 text-shadow:4px 4px 2px gray, 6px 6px 2px gray, 8px 8px 8px gray;
如果将向左和向上的阴影颜色设置为白色，文字就会有凸起的效果。text-shadow:-1px 0 #FFF, /*向左阴影*/，0 -1px #FFF, /*向上阴影*/，1px 0 #333,  /*向右阴影*/， 0 1px #333;  /*向下阴影*/
如果将向右和向下的阴影颜色设置为白色，文字就会有凹陷的效果。修text-shadow:-1px 0 #333, /*向左阴影*/，0 -1px #333, /*向上阴影*/，1px 0 #FFF,  /*向右阴影*/，0 1px #FFF;  /*向下阴影*/
（2）text-stroke，文字描边
text-stroke:宽度值 颜色值；小技巧，将字体颜色透明再设置描边可以创建镂空的文字
（3）text-overflow属性，文字溢出属性
ellipsis，当对象内文本溢出时显示省略标记（…）；clip，当对象内文本溢出时不显示省略标记（…），而是将溢出的部分裁切掉
text-overflow:ellipsis; overflow:hidden; white-space:nowrap（强制文本在一行显示）;这三个属性必须一起使用才有效果这个属性，因为单单text-overflow属性只是表示文字溢出显示形式。
（4）word-wrap，强制换行
normal，默认值，文本自动换行；break-word，“长单词”或“URL地址”强制换行；汉字一般不用因为系统能识别单个汉字
（5）font-face，嵌入字体
使用自定义字体需要两步，一使用@font-face方法定义字体名称；二使用font-family属性引用该字体；例如@font-face { font-family: myfont;  /*定义字体名称为myfont*/ src: url("../font/Horst-Blackletter.ttf");} div{font-family:myfont}，不过一般开发不用因为汉字自定义包太大
（6）font-size-adjust，属性值为一个aspect值
出现这个属性的根本原因是不同字体类型的字一般设置相同的font-size它的高度是不一样的，每种类型字体都有它的aspect值，例如某种类型字体的字母x，aspect =（x-height）/（font-size），不同类型字体的aspect值是不一样的，所以为了避免修改字体类型页面崩溃，通过计算可得（aspect1）/（aspect2）=（font-size2）/（font-size1），这样通过查询得知两种字体aspect值之后，在已知某一种字体的font-size时可以得到另一个字体font-size值且两者高度相等。

5.颜色
（1）opacity，透明度，取值范围为0.0~1.0，0.0表示完全透明，1.0表示完全不透明（默认值），该透明度会将元素整体都变透明
（2）rgab颜色，a是透明度的意思，跟opacity差不多，取值范围也是0.0~1.0，不过rgba不会影响元素中的内容以及子元素的透明度
（3）线性渐变，指在一条直线上进行渐变，用得较多
background:linear-gradient(方向，开始颜色，结束颜色);
方向取值有两种，一种是关键字，一种是角度(deg)
属性值	对应角度	说明
to top	0deg	从下到上
to right	90deg	从左到右
to bottom	180deg	从上到下（默认值）
to left	270deg	从右到左
to top left		右下角到左上角（斜对角）
to top right	左下角到右上角（斜对角）
颜色渐变可以有多个渐变，不局限两个，例如background:linear-gradient(to right, red, orange,yellow,green,blue,indigo,violet);
（4）径向渐变，是一种从起点到终点颜色从内到外进行圆形渐变（从中间向外拉，像圆一样）
background:radial-gradient(position ,shape size,start-color,stop-color)，position，shape size都可以省略都有默认值
position：定义圆心位置；也有长度值，关键字两种，这里只介绍关键字
center	中部（默认值）
top	顶部
right	右部
bottom	底部
left	左部
top left	左上
top center	靠上居中
top right	右上
left center	靠左居中
center center	正中
right center	靠右居中
bottom left	左下
bottom center	靠下居中
bottom right	右下
shape size：由2个参数组成，shape定义形状（圆形或椭圆），size定义大小；
shape参数取值，circle，定义径向渐变为“圆形”；ellipse，定义径向渐变为“椭圆形”（默认值）
定义大小size，size主要用于定义径向渐变的结束形状大小。
closet-side	指定径向渐变的半径长度为从圆心到离圆心最近的边
closest-corner	指定径向渐变的半径长度为从圆心到离圆心最近的角
farthest-side	指定径向渐变的半径长度为从圆心到离圆心最远的边
farthest-corner	指定径向渐变的半径长度为从圆心到离圆心最远的角
start-color：定义开始颜色值；
stop-color：定义结束颜色值；
跟线性渐变一样，颜色并不局限于两种，不过默认的是根据颜色个数均匀分布区域，不过也可以添加百分比来改变均匀分布，例如background:-webkit-radial-gradient(red 5%,green 30%,blue 60%);}

6.边框
（1）border-radius，边框圆角
（2）border-colors，多色边框，这个属性好像在浏览器中兼容性有点问题，目前google和firefox都没成功
border-colors属性并没有得到各大主流浏览器支持，目前仅有目前仅有Mozilla Gecko引擎（火狐浏览器）支持，因此需要加上浏览器前缀“-moz-”；
不能使用-moz-border-bolors属性为4条边同时设定颜色，必须分别为4条边设定颜色；
-moz-border-top-colors:颜色值;
-moz-border-right-colors:颜色值;
-moz-border-bottom-colors:颜色值;
-moz-border-left-colors:颜色值;
如果边框宽度（border-width）为n像素，则该边框可以使用n种颜色，每种颜色显示1像素的宽度。
当然也可以实现渐变边框，要点就是多个颜色值之间不要差异太大，要给人一种渐变的感觉。
（3）border-image，边框背景，在css3中可以使用border-image为边框添加背景图片,使用该属性要记得先设置border的width和style
border-image:url() 30 30 30 30 repeat;共需要设置三种参数
图片路径；切割图片的宽度（4条边的宽度，依次为上边、右边、下边、左边，按照顺时针方向，类似于border属性的4条边顺序）；图片平铺方式repeat（重复，中间内容会不断重复，超出元素宽度或高度的部分将会被剪切掉），round（平铺，可以理解为圆满铺满，为了实现圆满，边框图片会压缩或拉伸），stretch（拉伸，对边框部分进行拉伸（不重复），有多长拉多长）
在使用border-image属性为边框添加背景时，如果想要达到如期效果需要注意以下两点
边框的背景在制作时候，应该制作4条边，中间部分需要挖空；边框背景图片的每条边宽度跟对应的边框宽度（border-wdith）应该相同；
还有很多派生属性可以更好设置边框背景，不过太多就不细细展示了，例如border-top-image这种
（4）box-shadow，边框阴影，跟文字阴影的x，y类似
box-shadow：x-shadow  y-shadow  blur  spread  color  inset;
x-shadow：设置水平阴影的位置（X轴），可以使用负值；
y-shadow：设置垂直阴影的位置（y轴），可以使用负值；
blur：设置阴影模糊半径；
spread：扩展半径，设置阴影的尺寸；可选参数，缺省时值为0
color：设置阴影的颜色；
inset：这个参数默认不设置。默认情况下为外阴影，inset表示内阴影。
跟别的属性类似，border-shadow也可以用逗号隔开分别设置四条边的阴影样式，不过要注意顺序是左，上，下，右

7.背景
（1）背景大小，background-size
background-size取值共有2种，一种是使用长度值（如px、百分比）；另外一种是使用关键字。
关键字有,cover（即覆盖，将将背景图片以等比缩放来填充整个容器元素），contain（即“容纳”，将背景图片等比缩放至某一边紧贴容器边缘为止）
如果是px例如background-size:100px 60px，其实就是图片填充100*60的区域，默认以左上角padding开始算
（2）背景位置，background-origin
一般配合着background-size来进行定位的，例如先通过background-origin指定背景图片平铺的最开始位置，再利用background-position来进行定位。属性值如下：
border-box	表示背景图片是从边框开始平铺
padding-box	表示背景图片是从内边距开始平铺（默认值）
content-box	表示背景图片是从内容区域开始平铺
（3）背景剪切，background-clip
background-clip:属性值;
border-box	默认值，表示从边框border开始剪切
padding-box	表示从内边距padding开始剪切
content-box	表示从内容区域content开始剪切
剪切的意思其实就是剪切区域外的部分都不可见，看起来就像被剪掉一样
（4）多背景图片
本质上是多个背景图片一起引用进行叠加，不推荐使用，推荐用photoshop将图片合并为一张再进行引用

8.变形
在css3中，所有变形方法都是属于transform属性，因此所有关于变形的方法前面都要加上transform，以表示变形处理
（1）位移，translate（）
有translateX(x)方法，translateY(y)方法，translate(x,y)方法，前两个不用多说，x为正向右反之相反，y为正向下反之相反，最后一个方法y是缺省值，如果不设置表示只沿x轴进行移动
（2）缩放，scale（）
scaleX(x),scaleY(x),scale(x,y)跟位移同理三种表示方法，不过参数以1为界限，大于1就表示方法，小于1就表示缩小。一二分别表示沿着x轴，y轴进行缩放，第三种方法y也是缺省值可以省略，不过省略的意思是x，y缩放相同倍数
（3）旋转，rotate（），默认旋转中心是50% 50%的点
指的是元素相对中心原点进行旋转的度数，单位deg（就是degree的缩写），如果度数为正表示顺时针旋转，否则是逆时针旋转
（4）倾斜，skew（）
skewX(x),表示元素在x轴倾斜的度数，单位为deg，如果单位为正则表示元素沿x轴负方向进行倾斜，反之相反
skewY(y),表示元素在y轴倾斜的度数，单位为deg，如果单位为正则表示沿着y轴正方向进行倾斜，反之相反
skew(x,y)，如果y缺省则只倾斜x轴方向
（5）中心原点，transform-origin
任何元素都有一个中心原点，默认情况下，元素的中心原点x轴和y轴的50%处，css3进行的位移，旋转，缩放，倾斜也都是以元素的中心原点进行变形
transform-origin：取值，一般分为长度值和关键字两种，其中长度一般使用百分比作为单位，很少使用px，em作为单位
关键字		百分比		说明
top left		0 0		左上
top center		50% 0		靠上居中
top right		100% 0		右上
left center		0 50%		靠左居中
center center	50% 50%		正中
right center	100% 50%		靠右居中
bottom left	0 100%		左下
bottom center	50% 100%		靠下居中
bottom right	100% 100%	右下

9.过渡
一般的过渡都是配合:hover伪类来使用，将过渡语句写在被改变的元素标签内，当然也可以写在:hover伪类中，区别见下面。
将transition放在hover伪类中，鼠标进入时会有transition效果，但是移出时属于非hover，没有过渡效果。但是将transition写在整个元素中，会在元素整个移动过程中都有过渡效果。如果想要对多个属性实现平滑过渡效果，可以用逗号隔开各个属性即可。其中transition:all 1s linear;这种写法的all表示的是对所有值有变化的css属性都执行过渡效果。
transition:属性 持续时间 过渡方法 延迟时间;可以简写也可以分开写
（1）过渡属性，transition-property
过渡属性的取值是一个css属性名
（2）过渡时间，transition-duration
取值是一个时间，单位为s（秒），可以为小数如0.5s
（3）过渡函数，transition-timing-function
共有5钟，linear（元素从初始状态变化到终止状态为匀速），ease（。。速度由快到慢，逐渐变慢），ease-in（速度越来越快，称为渐显效果），ease-out（速度越来越慢，称为渐隐效果），ease-in-out（先加速后减速，称为渐显渐隐效果），
（4）延迟时间，transition-delay
可以省略，默认是0s，不然就自己设置单位为s，当然也可以为小数

10.动画
使用动画两步：先定义动画，再调用动画
基本格式：animation: name duration timing-function delay iteration-count direction；其中delay默认值为0，iteration-count默认值为1，direction默认值为noraml即正方向播放即从0%到100%。当然也可以分开单独设置属性。
注意：当区间超过两个时要改变的属性要分别定义不能省略，不然就会在区间内恢复初始态或者从0就开始一直向着最终态变化。
（1）@keyframes
定义动画，@keyframes 动画名{0%{}。。100%{}}，0%和100%是必须的，也可以加入别的间断点例如30%，60%等。如果只有0和100这两个区间那么可以简写成
0%对应from，100%对应to
（2）animation-name,调用动画
没啥特别的，直接通过名称调用即可，一般是将animation放在：hover中，不过要想打开页面就加载可以将其放在变化的元素中即可，不过放在hover中鼠标一移开事件就终止了。
（3）animation-duration，动画持续时间，跟transition中的基本一样
（4）animation-timing-function，播放方式
跟transition中的也一样，共linear,ease,ease-in,ease-in-out,ease-out这五种
（5）animation-delay，延迟时间
跟transition中也一样，缺省时默认值为0
（6）animation-iteration-count，播放次数
默认一次，可以填正整数或者infinite
（7）animation-direction,播放方向
默认正方向，还有reverse（反方向），alternate（播放次数为奇数时动画沿原方向播放；为偶数时沿反方向播放），所谓的正是指从0%到100%，反是指从100%到0%
（8）animation-play-state，播放状态
默认为runnig（播放动画），paused（暂停动画），这个属性一般配合着按钮与js进行操作
（9）animation-fill-mode,时间外属性（注意该属性指的是动画播放完毕之后的样式，所以一般来说播放次数为有限）
属性值		说明
none		动画完成最后一帧时会反转到初始帧处（默认值）
forwards		当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。
backwards	在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。
both		元素动画同时具有forwards和backwards效果

11.多列布局
是个很神奇的属性，能都根据给定列数或者给定列宽再依据内容将区域完美的分配，一般只用设置宽度它会根据参数自动适应并分配出合适的高度
（1）列数，column-count
属性值：auto（列数由其他属性决定，例如column-width），n（正整数）
（2）列宽，column-width
属性值：auto（默认值，根据column-count属性值自动分配宽度），长度值（可以为px，em，百分比等）
（3）列间距，column-gap
定义列与列之间的间距，属性值：normal（浏览器默认的长度值），长度值（可以为px，em或者百分比等）
（4）列边框，column-rule
定义的是列于列之间的边框样式，例如如果有两列是他们中间的而不是说给每个列加边框。
column-rule：边框宽度 边框样式 边框颜色；这三个属性值跟一般的border的含义一样
（5）跨列，column-span
跨列属性是针对特定元素进行定义。属性值：none（默认值，表示元素不跨任何列），all（表示元素跨越所有列，跟none值相反，表现出来的效果就跟标题一样），注意跨列all表现出来的效果其实本质上是将跨列元素当成标题，并以它为分割线，上面为一部分，下面为一部分并各自按规则排列。这个规则排列就是从上到下，从左到右。

12.弹性盒子模型
出现原因：为了解决传统布局的死板以及不足，CSS3新增了新型的弹性盒子模型。通过弹性盒子模型，我们可以轻松地创建自适应浏览器窗口的流动布局以及自适应字体大小的弹性布局，使得响应式布局实现更加容易。
注意：在使用弹性盒子前，必须把父元素display属性设置为box或者inline-box，两者的区别类似block和inline-block，要是想要浏览器兼容要-webkit-box这样写。父级元素跟传统的盒模型区别不大会自动依据父级将宽度生成为100%不过子元素差别很大，子元素必须要有内容或者设置宽高才能撑起盒子而不是像传统的只要设置高即可，因为子元素的宽不会依据父级100%填充。
（1）box-orient,盒子的布局方向
属性值	说明
horizontal	弹性盒子“从左到右”在一条水平线上显示它的“子元素”
vertical	弹性盒子“从上到下”在一条垂直线上显示它的“子元素”
inline-axis	弹性盒子“沿着内联轴”显示它的“子元素”（默认值）
block-axis	弹性盒子“沿着块轴”显示它的“子元素”
（2）box-direction,盒子的布局顺序
属性值：normal（正常显示，默认值），reverse（反向显示），因为一般的排序是按照元素的上下级顺序来排的，该属性可以用来翻转它
（3）box-ordinal-group,盒子的布局位置
属性值：自然数，从1开始。不设置的话默认是1并按照文档中元素加载顺序排列，不过可以设置具体值来进行从小到大排列顺序。
（4）box-flex,盒子的弹性空间
在CSS3弹性盒子模型中，我们可以使用box-flex属性来定义弹性盒子内部的子元素是否具有弹性空间。如果子元素具有弹性空间，当弹性盒子（父元素）的尺寸放大或缩小的时候，具有弹性空间的子元素的尺寸也会放大或缩小。每当弹性盒子有额外的空间时，具有弹性空间的子元素也会扩大自身大小来填补这一空间。
box-flex：取值。取值可以是一个整数或者小数，不可为负数，默认值为0。当盒子中包含了多个定义了box-flex属性的子元素时，浏览器将会把这些子元素的box-flex属性值相加并根据占比来分配盒子剩余的空间。
注意：box-flex属性只有在父级弹性盒子确定了宽度或高度才有效，也就是说必须先为父元素定义width或者height属性值。
使用弹性空间设置，使得弹性盒子内部元素的总宽度和总高度，始终等于弹性盒子的宽度与高度。当然要先给弹性盒子具体的宽度或高度，这样子元素的弹性空间才生效。
不过如果不同时设置宽高的话其实还是看不到效果，虽然box-flex属性生效了，所以一般使用应该还是要宽高都给定。
（5）box-pack与box-align,盒子内部对齐
CSS3新增的box-pack属性和box-align属性，分别用于定义盒元素内部“子元素”的水平方向和垂直方向上的富余空间管理方式。这些对齐方式，对盒元素内部的文字、图形以及子元素都是有效的。
box-pack：取值
属性值	说明
start	所有子元素都显示在盒子的左侧，富余的空间显示在盒子的右侧
end	所有子元素都显示在盒子的右侧，富余的空间显示在盒子的左侧
justify	富余的空间在子元素之间平均分配。在第一个子元素之前和最后一个字元素之后不分配空间
center	富余的空间在盒子的两侧平均分配
box-align：取值
属性值	说明
start	所有子元素沿着盒子的上边缘排列，都显示在盒子的上部，富余的空间显示在盒子的底部
end	所有子元素沿着盒子的下边缘排列，都显示在盒子的底部，富余的空间显示在盒子的上部
center	富余的空间在盒子的上下两侧平均分配，即上面一半，下面一半
baseline	所有盒子沿着它们的基线排列，富余的空间可前可后显示
stretch	每个子元素的高度被调整到适合盒子的高度显示
一般这两个属性我们只要掌握center值就可以，对于使内容垂直水平都居中很好使，像之前的多行文本想要垂直居中还得给父级设置table-cell或者用绝对定位现在只要给父级使用“display：box”这种使其变为弹性盒子模型就可以了。