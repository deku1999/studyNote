注：js引入我们一般放在body里，放在最后面，js中函数如果没有定义返回值默认的返回值就是undefined

1.数据类型：基本数据类型：数字型(number），字符串型(string)，布尔型（boolean）
特殊数据类型：空值（null型，指未声明），未定义值（undefined，没有赋值），转义字符
（注，js中有一种特殊类型的数字常量NAN(not a number），当程序产生某种错误后产生的没有意义的数字）
js中除法/结果为浮点型，

2.类型转换：字符串型转换为数值型， parseInt(n)(返回的值没有小数点为整数）,parseFloat(n)（返回的值可以有小数点），parseInt的转换法是直接去尾法，舍去小数点后面保留整数。parseFloat就是直接原样保留数字。数值型转换为字符串型，n.toString()。

3.语法：区分大小写，分号可有可无，  

4.注释：//单行注释内容
/*多行注释内容*/

5.switch语句
	switch(表达式){
		case 取值1:
			语块1;break;
    		case 取值2:
        			语块3;break;
    		……
   		case 取值n:
        			语块n;break;
    		default:
        			语句块n+1;	
	}

6.字符串：str.charAt(i)可以获取字符串第i位的字符

7.函数调用：补充一种不常用的调用，通过链接调用，<a href="javascript:mes()">表白</a>

8.特殊函数：嵌套函数：顾名思义在函数里定义的函数，嵌套函数只能在函数内部进行调用
递归函数：满足两条件，（1）定义一个结束递归的条件 （2）包括一个递归调用的语句
内置函数：

9.常用内置函数：eval()函数，可以把一个字符串当作表达式去执行，例如eval("document.write('JavaScript入门教程')")可以直接打印出这行字
inFinite(number)函数，判断一个数是否为有限值；number参数必选，返回值为true或false；如果是字符串类型数字会自动转换成数字处理
isNAN(参数)，判断参数是不是非数字，返回值为true或false；字符串类型同样会转为数字进行判断
parseInt（）和parseFloat（）函数
escape（charstring）函数，对字符串进行编码，如escape("hello lvye!")会返回“hello%20lvye%21”，空格代表%20，！代表%21
unescape（charstring）函数，于escape函数功能相反，解码函数

10.字符串对象
属性：length
方法：match()方法，返回指定值没找到就返回null，例如str.match("world")，str=“hello world”，返回world
search（），返回字符串的起始位置，没找到就返回-1，str=”hello world“，str.search("world")，返回6
indexOf（），返回指定字符串在字符串中首次出现的位置，跟search（）很像，（其实我自己看不出有啥差别。。）
replace（），在字符串中用一个字符串去替代另一个字符串，str="i love you",str.replace("love","hate")返回"i hate you
charAt(i)，获取字符串某一位字符
toLowerCase()，将字符串小写，toUpperCase()，将字符串大写
localeCompare()，比较字符串，str1.localeCompare(str2)，1小于2返回小于0的数字，1大于2则返回1，相等则返回0
split（）,字符串分割，分割可以是一个字符，多个字符或一个正则表达式，分割符不作为返回数组元素的部分，str="i love you",str.split(" ")返回为一个数组对象,[i,love,you]
substring（），字符串提取，str="i love you",str.substring(5,8)返回值为"e y"

11.日期对象：
创建日期对象，var 日期对象名 = new Date(),或者var 日期对象名 = new Date（日期字符串），日期字符串可以是"2015-5-3","May 3,2015","2015/5/3"这三种形式
方法，获取时间的：getFullYear（），getMonth（），getDdate（），getHours（），getMinutes（），getSeconds（） ；
设置时间：setFullYear（a,b,c），setMonth（a,b），setDate（a），setHours（a,b,c,d），setMinutes（a,b,c），setSeconds（a,b）；(小时，分，秒最后一个参数ms为可选项）
将日期时间转化为字符串，toString（）（转为普通字符串），toUTCString（）（转为UTC格式字符串），toLocaleString（）（转为本地时间格式的字符串）

12.数组对象：
数组是存储一组“相同数据类型”的数据结构
创建数组对象，（1）var a = new Array（），新建长度为0数组  （2）var a = new Array（n），新建长度为n数组 （3）var a=new Array（1，2，3）创建指定长度的数组并赋值
数组属性：length，constructor, prototype
数组方法：slice(a,b)获取数组a到b之间的元素;
添加元素：unshift()，在数组开头添加元素；push（），在数组末尾添加元素
删除元素：shift（），删除数组第一个元素；pop（），删除数组最后一个元素；
toString（）,将数组转换为字符串；join（），将数组元素连接成字符串；concat（），多个数组连接为字符串；sort（函数方法名），根据函数返回值可以进行正向或逆向排序；reverse（），数组元素反向排序，注意只是反向不是从大到小

13.数值对象：
有Math对象和Number对象，暂时只介绍Math对象
方法：max(x，y..)返回多个数中的最大值；min(x,y..)返回多个数中最小的；pow(x,y)返回x的y次幂；abs(x),返回数的绝对值；round(x)把数四舍五入为最接近的整数，0.5会向上取整；random()返回0~1之间的随机数；ceil(x)对一个数向上舍入；floor(x)对一个数向下舍入。貌似Math的这些方法的x参数是字符串也行，js会自动把他们转换为数值型再去进行操作。

14.窗口对象：window
打开一个窗口：var a=window.open(url,窗口名称，参数),参数可以设置打开窗口的宽高，位置，是否固定等，通过定义a变量来接收打开窗口返回的变量，再利用a.close()便可以关闭打开的子窗口
关闭当前窗口：window.close(),close(),this.close() 
改变窗口大小：resizeTo(x,y), 执行该方法会直接将窗口改为该参数大小；resizeBy(x,y)，执行该方法是执行一次窗口尺寸就增加或减少x，y
移动窗口：moveTo(x,y)，移动窗口到依据屏幕左上角定义的位置；moveBy(x,y)，一次移动x，y值  （不常用）
窗口历史：利用window对象里的history对象。go()进入指定的网页，back()返回上一页，forward()进入下一页。如<a href="javascript:window.history.forward();">下一页</a>
<a href="javascript:window.history.back();">上一页</a>
也可以用history.go()方法指定要访问的历史记录若参数为正则向前移动，为负则向后如<a href="javascript:window.history.go(-1);">向后退1次</a>
<a href="javascript:window.history.back(2);">向后前进2次</a>
使用history.length属性能够访问history数组的长度，可以很容易地转移到列表的末尾，如<a href="javascript:window.history.length-1;">末尾</a>
定时器：一次性定时器：var a = setTimeout(code ,time)设置定时器，clearTimeout()清除定时器，用a接收返回值就可以通过clearTimeout(a)清除定时了,code可以是函数调用或者直接代码,time的单位是ms
重复性定时器：var a =setInterval()设置，clearInterval(a)清除

15.对话框总结，属于window对象
alert()，平平无奇单纯的弹出没有返回值
confirm()，可以根据用户点击返回true或false
prompt(),用户输入字符串点击确定会返回字符串，输入为空时会返回空字符串，取消会返回null，

16.文档对象document，document对象也是window对象中的子对象
属性：title（标题）；URL（文档地址）；fileCreateDate（文档创建日期）；fileModifiedDate（文档修改时间，精确到天）；fileModified（文档修改时间，，精确到秒）；fileSize（文档大小）
方法：write（）（输入文本到当前打开的文档）；writeln（）（跟write相同并添加换行符\n，一般没太大区别，不过如果是输入到pre标签有用因为它可以解析换行符这种）；getElementsById（）；getElementsByName（）（获取某个name值得元素，用于表单元素）

17.DOM对象，每一个元素节点都可以看成一个“对象”，都有其自身的属性和方法
节点常用属性：parentNode（获取当前节点的父节点），childNodes（获取当前节点得子节点集合），firstChild（当前节点的第一个子节点）；lastChild（当前节点的最后一个节点）；previousSibling(当前节点的前一个兄弟节点）；nextSibling(当前节点的后一个兄弟结点）；attributes（元素的属性列表）
节点操作：（1）创建节点，var a=document.createElement("元素名'),var txt=document.createTextNode("元素内容"),a.appendChild(txt)，把元素内容插入进元素中
(2)插入节点，obj.appendChild(new),obj是new的父节点对象；obj.insertBefore(new,ref)表示在ref节点前插入new节点
(3)删除节点，obj.removeChild(oldChild)
(4)复制节点，obj.cloneNode(bool),当bool为1或true表示复制节点本身以及该节点下所有子节点；为0或false时只复制节点本身
(5)替换节点，obj.replaceChild(new,old)
(6)innerHTML和innerText，可以直接获取元素的内容，innerHTML支持性更好，另外innerText只能单纯的获取文本不能解读标签
(7)js操作css利用obj.style.属性名，不过属性名要使用驼峰型，就是说例如多单词的长属性“-webkit-box-shadow”应该写成“webkitBoxShadow”

18.js事件：
鼠标事件：onclick（鼠标单击事件）；ondbclick（~双击事件）；onmouseover（~移入事件）；onmouseout（~移出事件）；onmousemove（~移动事件）；onmousedown（~按下事件）；onmouseup（~松开事件）
键盘事件：onkeydown（按下键事件，包括数字键，功能键）；onkeypress（按下键事件，只包含数字键）；onkeyup（放开键事件，包括数字键，功能键）
表单事件：只有在text，textarea，select中才生效；onfocus（获取焦点事件）；onblur（失去焦点事件）；onchange（状态改变事件，例如textarea文本变化）；onselect（选中文本事件，例如选中textarea中文本）
编辑事件：oncopy（复制事件），oncut（剪切事件），onpaste（粘贴事件）令这些函数返回false就可以阻止用户进行这些编辑操作
页面事件：onload（加载后发生的事件），onresize（页面大小改变时发生的事件），onerror（页面或图片加载出错时发生的事件，不过好像只支持ie浏览器）

19.正则表达式(regular expression)：就是用某种模式去匹配某一类字符串的公式；学习正则表达式就是学习怎样定义一种“模式”的语法，说白了，就是学习各种匹配的规则，例如匹配数字要怎么要怎么写，匹配字符怎么写等等；正则表达式常见于表单验证、字符串操作。
定义正则表达式：显式定义，var myregex = new ReExp("[0-9]"); 隐式定义，var reexp  = /[0-9]/ ，一般用第二种简洁
test（）方法，reexp.test(str)可以返回true或false来判断字符是否符合正则匹配
正则语法：
（1）常用元字符：
\d	匹配数字，相当于[0-9]
\D	匹配非数字，相当于[^0-9]
\w	匹配字母或数字或汉字或下划线
\W	匹配任意不是字母、数字、汉字或下划线的字符
\s	匹配任意的空白符，如空格、换行符、制表符等
\S	匹配任意不是空白符的字符
.（点号）	匹配除了换行符以外的任意字符
[...]	匹配方括号中的所有字符
[^...]	匹配非方括号中的所有字符
（2）连接符
[0-9]	匹配数字，等价于\d
[a-z]	匹配英文小写字母
[A-Z]	匹配英文大写字母
[0-9a-zA-z]	匹配数字或英文字母
（3）限定符，就是限定某个或某类字符出现的次数，一般加在元字符或连接符或某个字符后面来限定次数
+	重复1次或更多次
*	重复0次或更多次（任意次数）
?	重复0次或1次（最多1次）
{n}	重复n次
{n,}	重复n次或更多次（最少n次）
{n,m}	重复n到m次
（4）定位符，限定某些字符出现的位置
^	限定开始位置的字符
$	限定结尾位置的字符
\b	限定单词（字）边界的字符
\B	限定非单词（字）边界的字符
（5）转义字符
我们都知道正则表达式包括2种字符，普通字符，特殊字符。如果我们要匹配正则表达式中的特殊字符，我们就必须在该特殊字符前面加上反斜杠“\”将其进行转义。
例如我们想匹配go+，要这样写go\+，因为+本身就是正则的限定符。例如要匹配字面意义的“\”，就需要使用“\\”表示。需要转义的字符有：$、(、)、*、+、.、[、]、?、\、/、^、{、}、|。这些字符都不需要记忆，见得多就自然而然记住了。
（6）分组，用小括号将你需要的部分括起来即可成为一个整体
（7）选择符
在正则表达式中，选择匹配符是“|”，用于选择匹配2个选项之中的任意一个，类似JavaScript中的“或”运算。例如，“abc|def1”匹配的是“abc”或“def1”，而不是“abc1”或“def1”。
（8）优先级顺序
\	转义符
()、(?:)、(?=)、[]	圆括号或方括号
*、+、?、{n}、{n,}、{n,m}	限定符
^、$、\b、\B	位置和顺序
|	选择符，“或”运算
从高到低排列