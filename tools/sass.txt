利用sass写css时，对于需要重复使用的就定义成一个变量，对于不需要重复使用的直接用数值即可。sass文件后缀为scss
1.语法基础
（1）变量
在sass中声明变量使用$开头，sass变量包括3部分：声明符，变量名，值，例如$wid:50px;
在sass中变量的取值有一般值，默认值两种，上面的为一般值。定义默认值也很简单只要在变量值后面加上！default就可以，引用时想改变在局部作用域重新声明即可。
（2）数据类型
数字值：如10px，10
字符串：有"微软雅黑",sans-serif即带引号和不带引号两种
布尔值：true，false；
颜色值：#112233，rgb（233，230，233），hsl（360，50%，50%）
列表值："10px 10px 10px 10px"(空格隔开)，"YaHei,Arial,Helvetica,sans-serif"(逗号隔开)
Map值：简单了解，类似于json，里面有键值对，通过$变量名:(键名1：值1，键名2：值2，...键名n:值n)；这样定义
空值null；
（3）sass嵌套
选择器嵌套：
很常见，例如body{ width:$wid;  div{width:$wid;}}
属性嵌套：
适用于border-top,border-right这种前缀相同的，可以border:{top:10px; right:10px;}这样写出的效果是一样的，不过要注意添加冒号：不然sass会按照选择器嵌套来处理
伪类或伪元素嵌套：
例如.clear{ $:after{..}}，sass会根据情况自动解析单引号还是双引号并完成嵌套，左边效果为.clear::after{...}
（4）sass插值
在sass中，我们可以使用插值的方式来实现在选择器名，属性名以及属性值中插入一个变量的值，从而来构造一个新的选择器名，新的属性名以及新的属性值，通过#{变量}即可使用插值，是个很万能的东西
（5）sass注释
//注释内容，这种方式编译为css不会保留。/*注释内容*/，这种会保留，因为和css注释方式相同。不过这两种在压缩的时候都会被删除，要想不被删除可以这样/*！注释内容*/写注释。

2.基本运算
（1）数字运算
在sass中，共有加、减、乘、除四种运算方式
在sass加法中，数字可以带单位，但是需要运算单位相同，如果不相同则编译不通过
在sass减法中，数值可以带单位，也需要单位相同，注意当减法的两个值为变量时，减号前后需要留个空格因为有的变量名长这样bor-top..
在sass乘法中，只能有一个数值带单位，另外一个数值不能带单位，两个都带单位会报错
在sass除法中，由于“/”在css中已经作为一种符号来使用了，所以使用除法需要在表达式外面添加小括号（）
这里建议不管是哪种运算外面都加上括号，避免出错也能使代码一目了然
（2）字符运算
在sass中可以使用“+”来实现字符串的拼接，结果字符串是否有引号取决于左边字符串是否有引号，如果左边有则结果就有，左边没有结果就没有
（3）颜色运算
颜色运算也支持加减乘除，不过是分段计算的，即红绿蓝三部分颜色独立计算，如果颜色值不是#223344这种16进制格式，就会转换成格式再进行计算。

3.代码重用
继承，占位符和混合宏
方法	声明方式		调用方式
继承	.class		@extend，例如.a{..}，div{@extend .a;}
占位符	%placeholder	@extend，例如%bt{...}，div{@extend %bt}
混合宏	@mixin		@include，例如@mixin 混合宏名(参数可选，参数默认值可选){...},div{@include 混合宏名;}
继承与占位符其实都可以统称为继承，他们两者的区别是用占位符写的基类在编译之后不会保留，而继承会保留。
继承与混合宏相对比，两者都可以实现代码块重用。继承的优点是不会造成代码冗余，不过缺点就是样式太死板。混合宏就像函数一样可以定义形参并赋予默认值，在调用的时候可以自己根据情况进行赋值比较灵活，不过缺点就是会照成代码冗余即相同代码不会合并。
在实际开发中，对于功能代码块（类似于js中的函数）一般使用混合宏，否则一般的用继承即可。

4.流程控制
（1）@if语句
@if（）{}；@if（）{} @else{}；@if（）{} @else if（）{} @else{}
（2）@for循环
方法1：@for $i form 开始值 through 结束值
方法2：@for $i form 开始值 to 结束值
两种方法的区别是，方法一包括结束值，方法二包括，注意这里的$i好像不用赋值，因为它是默认从初始值开始
（3）@while循环
@while(判断条件){}
（4）@each循环
@each $i in 列表值
这个循环用的一般更多些，可以用来批量赋值
例如：$list:logo banner btn;
@each $i in $list
{
.#{$i}
{
 background-image:url("images/#{$i}.jpg");
}
}